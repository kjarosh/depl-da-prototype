name: K8s

on: [ push, pull_request ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  TESTS_IMAGE_NAME: ${{ github.repository }}-tests

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v3

      - name: Log in container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Bulid and push application image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: Dockerfile.builder
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref == 'refs/heads/main' && 'latest' || github.sha }}
          target: application

      - name: Build and push tests image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: Dockerfile.builder
          tags: ${{ env.REGISTRY }}/${{ env.TESTS_IMAGE_NAME }}:${{ github.ref == 'refs/heads/main' && 'latest' || github.sha }}
          target: tests

      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@v0.0.8
      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: 1.18
      - name: build command
        working-directory: ./cmd
        run: go get && go build -o cmd
      - name: deploy pods
        working-directory: ./cmd
        run: ./cmd deploy -n test --create-namespace --peers=3,1 --wait-for-readiness --create-resources=false --image ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref == 'refs/heads/main' && 'latest' || github.sha }}
      - name: test command
        working-directory: ./cmd
        run: ./cmd test -n test
      - name: cleanup pods
        working-directory: ./cmd
        run: ./cmd cleanup -n test
